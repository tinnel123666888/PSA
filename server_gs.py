import numpy as np

class ggs:
    def __init__(self):
        self.s_sum = np.array([58, 12, 91, 78, 9, 5, 12, 48, 87, 36, 21, 94, 73, 38, 72, 12, 13, 95, 24, 67, 97, 7, 82, 15, 67, 93, 76, 48, 16, 8, 88, 76, 92, 19, 94, 91, 30, 73, 9, 68, 89, 19, 2, 93, 73, 15, 59, 29, 41, 19, 85, 84, 9, 13, 53, 97, 16, 13, 72, 89, 58, 34, 50, 97, 82, 0, 71, 85, 89, 94, 43, 58, 69, 76, 8, 22, 64, 66, 100, 61, 0, 32, 29, 35, 32, 84, 57, 63, 51, 37, 52, 77, 44, 2, 55, 90, 25, 23, 51, 71])
        self.N = 2
        self.z=10
        self.T=5
        self.m=800
        self.n=100
        self.A = np.random.randint(1, 2 ** 6, size=(self.m, self.n))

    def process(self, client_values):
        β = np.zeros(self.z, dtype=int)  # 初始化 β_j 数组
        for j in range(self.z):
            # 计算 v_sum 和 u_sum
            v_sum = np.zeros(self.m, dtype=int)
            for i in range(self.N):
                v_sum += client_values[i][j]
            print(f"Round {j + 1}: v_sum = {v_sum}")

            u_sum = v_sum - np.dot(self.A, self.s_sum)
            print(f"Round {j + 1}: u_sum = {u_sum}")

            # 计算 β_j
            for i in range(self.m):
                if u_sum[i] == self.N:
                    β[j] = 1
                    break
            print(f"Round {j + 1}: β[{j}] = {β[j]}")

        # 计算 ε
        if np.sum(β) > self.T:
            ε = 1
        else:
            ε = 0

        print(f"ε = {ε}")
        return ε


if __name__ == "__main__":

    client_values = [
        [[3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564],
         [3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564]],
        [[3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564],
         [3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564]],
        [[3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564],
         [3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564]],
        [[3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564],
         [3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564]],
        [[3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564],
         [3956, 6612, 10157, 7528, 10564], [3956, 6612, 10157, 7528, 10564]]
    ]

    server = gs()
    server.process(client_values)
